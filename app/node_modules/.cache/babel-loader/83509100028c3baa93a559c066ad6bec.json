{"remainingRequest":"D:\\huayu\\app\\node_modules\\babel-loader\\lib\\index.js!D:\\huayu\\app\\src\\store\\user.js","dependencies":[{"path":"D:\\huayu\\app\\src\\store\\user.js","mtime":1651814969649},{"path":"D:\\huayu\\app\\babel.config.js","mtime":1650456648521},{"path":"D:\\huayu\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650797765123},{"path":"D:\\huayu\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1650797766823}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/huayu/app/src/store/user.js"],"names":["reqGetCode","reqUserRegister","reqUserLogin","reqUserInfo","reqUpdateUserGoodsList","setToken","getToken","removeToken","state","code","token","phone","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","actions","getCode","commit","result","Promise","reject","Error","userRegister","user","alert","userLogin","data","getUserInfo","userLogout","updateusergoods","getters"],"mappings":"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","sourcesContent":["import {\r\n    reqGetCode,\r\n    reqUserRegister,\r\n    reqUserLogin,\r\n    reqUserInfo,\r\n    reqUpdateUserGoodsList\r\n} from \"@/api\";\r\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\r\n//登录与注册的模块\r\nconst state = {\r\n    code: \"\",\r\n    token: getToken(),\r\n    phone: '',\r\n};\r\nconst mutations = {\r\n    GETCODE(state, code) {\r\n        state.code = code;\r\n    },\r\n    USERLOGIN(state, token) {\r\n        state.token = token;\r\n    },\r\n    GETUSERINFO(state, phone) {\r\n        state.phone = phone;\r\n    },\r\n    // //清除本地数据\r\n    CLEAR(state) {\r\n        //帮仓库中先关用户信息清空\r\n        state.token = '';\r\n        state.phone = '';\r\n        //本地存储数据清空\r\n        removeToken();\r\n    }\r\n};\r\nconst actions = {\r\n    async getCode({ commit }, phone) {\r\n        let result = await reqGetCode(phone);\r\n        if (result.result == 200) {\r\n            commit(\"GETCODE\", result.code);\r\n            return \"ok\";\r\n        } else {\r\n            return Promise.reject(new Error(\"faile\"));\r\n        }\r\n    },\r\n    // //用户注册\r\n    async userRegister({ commit }, user) {\r\n        let result = await reqUserRegister(user);\r\n        if (result.code == 200) {\r\n            return \"ok\";\r\n        } else if (result.code == 201) {\r\n            alert(\"用户已存在\")\r\n        } else {\r\n            return Promise.reject(new Error(\"faile\"));\r\n        }\r\n    },\r\n    // //登录业务\r\n    async userLogin({ commit }, data) {\r\n        let result = await reqUserLogin(data);\r\n        if (result.code == 200) {\r\n            commit(\"USERLOGIN\", result.result.token);\r\n            setToken(result.result.token);\r\n            return \"ok\";\r\n        } else {\r\n            return Promise.reject(new Error(\"faile\"));\r\n        }\r\n    },\r\n    // //获取用户信息\r\n    async getUserInfo({ commit }) {\r\n        let result = await reqUserInfo();\r\n        if (result.code == 200) {\r\n            //提交用户信息\r\n            commit(\"GETUSERINFO\", result.phone);\r\n            return 'ok';\r\n        } else {\r\n            return Promise.reject(new Error('faile'));\r\n        }\r\n    },\r\n    // //退出登录\r\n    userLogout({ commit }) {\r\n        //只是向服务器发起一次请求，通知服务器清除token\r\n            commit(\"CLEAR\");\r\n            return 'ok';\r\n        \r\n    },\r\n    //更新用户购物车\r\n    async updateusergoods({commit},phone){\r\n        let result = await reqUpdateUserGoodsList(phone);\r\n        if (result.code == 200) {\r\n            return 'ok';\r\n        } else {\r\n            return Promise.reject(new Error('faile'));\r\n        }\r\n    }\r\n};\r\nconst getters = {};\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters,\r\n};\r\n"]}]}