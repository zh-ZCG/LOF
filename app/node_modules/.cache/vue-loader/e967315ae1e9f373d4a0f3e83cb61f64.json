{"remainingRequest":"D:\\huayu\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\huayu\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\huayu\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\huayu\\app\\src\\pages\\Trade\\index.vue?vue&type=template&id=63f139f3&scoped=true&","dependencies":[{"path":"D:\\huayu\\app\\src\\pages\\Trade\\index.vue","mtime":1651888981610},{"path":"D:\\huayu\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650797765123},{"path":"D:\\huayu\\app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1650797768126},{"path":"D:\\huayu\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650797765123},{"path":"D:\\huayu\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1650797767222}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}